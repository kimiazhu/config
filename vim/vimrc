"=========================================================================
" DesCRiption: My vimrc for Linux/Windows, GUI/Console
" Last Change: 2016-07-19
" Version: 1.91: add C# support
"=========================================================================
" First of all, setup vundle with git
" git clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim

set nocompatible " no compatible with vi
filetype off
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'
Plugin 'fatih/vim-go'
Plugin 'godlygeek/tabular'
Plugin 'plasticboy/vim-markdown'
Plugin 'easymotion/vim-easymotion'
Plugin 'tpope/vim-surround'
" Plugin 'OmniSharp/omnisharp-vim'
Plugin 'tpope/vim-dispatch'
Plugin 'scrooloose/syntastic'
Plugin 'ctrlpvim/ctrlp.vim'
" Plugin 'Valloric/YouCompleteMe'
Plugin 'scrooloose/nerdtree'
Plugin 'majutsushi/tagbar'
call vundle#end()            " required
filetype plugin indent on    " required
runtime macros/matchit.vim

syntax on
"colorscheme monokai
set encoding=utf-8
set noundofile
set fileencoding=utf-8
set number
set cursorline " highlight current line
set ruler "open ruler in status bar
set shiftwidth=4 "set << and >> move 4 spaces
set softtabstop=4 " delete 4 spaces by click delete ke
set tabstop=4 
set nobackup " override without backups
set autochdir " auth change work dir to current dir
set backupcopy=yes " when backup file exists, override it
set ignorecase smartcase
set nowrapscan
set incsearch
set hlsearch
set noerrorbells " 关闭错误信息响铃
set novisualbell " 关闭使用可视响铃代替呼叫
set t_vb= " 置空错误铃声的终端代码
" set showmatch " 插入括号时，短暂地跳转到匹配的对应括号
" set matchtime=2 " 短暂跳转到匹配括号的时间
set magic " 设置魔术
set hidden " 允许在有未保存的修改时切换缓冲区，此时的修改由 vim 负责保存
set guioptions-=T " 隐藏工具栏
set guioptions-=m " 隐藏菜单栏
set smartindent " 开启新行时使用智能自动缩进
set backspace=indent,eol,start
" 不设定在插入状态无法用退格键和 Delete 键删除回车符
set cmdheight=1 " 设定命令行的行数为 1
set laststatus=2 " 显示状态栏 (默认值为 1, 无法显示状态栏)
set statusline=\ %<%F[%1*%M%*%n%R%H]%=\ %y\ %0(%{&fileformat}\ %{&encoding}\ %c:%l/%L%)\ 
" 设置在状态行显示的信息
set foldenable " 开始折叠
set foldmethod=syntax " 设置语法折叠
set foldcolumn=0 " 设置折叠区域的宽度
setlocal foldlevel=1 " 设置折叠层数为
" set foldclose=all " 设置为自动关闭折叠 
" nnoremap <space> @=((foldclosed(line('.')) < 0) ? 'zc' : 'zo')<CR>
" 用空格键来开关折叠


let g:vim_markdown_toc_autofit = 1

" let g:EasyMotion_do_mapping = 0 " Disable default mappings
let g:EasyMotion_leader_key='<Space>'
nmap <Leader>f <Plug>(easymotion-overwin-f)
nmap F <Plug>(easymotion-overwin-f2)
" nmap <Leader>l <Plug>(easymotion-overwin-f2)
" Jump to anywhere you want with minimal keystrokes, with just one key binding.
" `s{char}{label}`
" nmap s <Plug>(easymotion-overwin-f)
" or
" `s{char}{char}{label}`
" Need one more keystroke, but on average, it may be more comfortable.
" nmap s <Plug>(easymotion-overwin-f2)
" Turn on case insensitive feature
let g:EasyMotion_smartcase = 1
" JK motions: Line motions
map <Leader>j <Plug>(easymotion-j)
map <Leader>k <Plug>(easymotion-k)

" NERDTree config
map <F2> :NERDTreeToggle<CR>
let NERDTreeWinSize=32
let NERDTreeWinPos="left"
let NERDTreeShowHidden=1
" Do not display verbose help messages
" let NERDTreeMinimalUI=1
" Auto delete buffer after file was deleted
let NERDTreeAutoDeleteBuffer=1
" close NERDTree if no other window open beside NERDTree
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTreeType") &&b:NERDTreeType == "primary") | q | endif
" auto start NERDTree
"autocmd vimenter * NERDTree

" ctags and tagbar/taglist
" if you are on macOS, you need to install ctags by `brew install ctags` to
" replace the system's ctag program, then run 'alias `brew --prefix`/bin/ctags'
" ========= run the following cmd to generate system ctags =========
" ctags -I __THROW --file-scope=yes --langmap=c:+.h --languages=c,c++ --links=yes --c-kinds=+p --fields=+S  -R -f ~/.vim/systags /usr/include /usr/local/include
" ========= system ctags generation command end ==========
let g:tagbar_ctags_bin='ctags'
"let g:tagbar_width=30
map <F3> :Tagbar<CR>
"autocmd BufReadPost *.cpp,*.c,*.h,*.hpp,*.cc,*.cxx call tagbar#autoopen() "如果是c语言的程序的话，tagbar自动开启
map <F5> :!ctags -R --c++-kinds=+p --fields=+iaS --extra=+q .<CR><CR> :TlistUpdate<CR>  
imap <F5> <ESC>:!ctags -R --c++-kinds=+p --fields=+iaS --extra=+q .<CR><CR> :TlistUpdate<CR>
set tags=./tags,tags,~/.vim/systags;/
